<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:ProcessManager.UI">


    <!--#region Animation timings -->

    <Duration x:Key="MouseHoverAnimationTiming">0:0:0.15</Duration>
    
    <!--#endregion-->

    <!-- A button style that displays 3 dots that animate to a different colour when mouse enter the control -->
    <Style x:Key="ThreeDotButtonStyle" TargetType="{x:Type Button}">

        <Setter Property="Foreground" Value="Black"/>

        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>

        <Setter Property="Cursor" Value="Hand"/>

        <Setter Property="SnapsToDevicePixels" Value="True"/>

        <Setter Property="Opacity" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsEnabled}"/>


        <Setter Property="Template">

            <Setter.Value>

                <ControlTemplate>

                    <!-- The control's main border -->
                    <Border Background="Transparent">

                        <!-- A stack panel, jus for ease of layout so the dots will be aligned without too much hassle-->
                        <StackPanel Orientation="Horizontal"
                                                                    
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}">

                            <!-- The 3 dots, and 1 "main" dot that all other dots "inherit" from -->
                            <Ellipse x:Name="MainEllipse"
                                                                 
                                      Width="7"
                                      Height="{Binding Path=ActualWidth, 
                                      RelativeSource={RelativeSource Mode=Self}}"
                                      
                                      Fill="{TemplateBinding Foreground}"/>

                            <Ellipse Width="{Binding ElementName=MainEllipse, Path=ActualWidth}"
                                     Height="{Binding ElementName=MainEllipse, Path=ActualHeight}"
                                                                     
                                     Margin="2,0"
                                                                  
                                     Fill="{TemplateBinding Foreground}"/>

                            <Ellipse Width="{Binding ElementName=MainEllipse, Path=ActualWidth}"
                                     Height="{Binding ElementName=MainEllipse, Path=ActualHeight}"
                                                                      
                                     Fill="{TemplateBinding Foreground}"/>

                        </StackPanel>

                    </Border>

                    <ControlTemplate.Triggers>

                        <!-- When mouse enters the control -->
                        <Trigger Property="IsMouseOver" Value="True">

                            <Trigger.EnterActions>

                                <BeginStoryboard>

                                    <Storyboard>

                                        <!-- Animate to a white colour -->
                                        <ColorAnimation Storyboard.TargetProperty="(Button.Foreground).(SolidColorBrush.Color)"
                                                                                        
                                                        Duration="{StaticResource MouseHoverAnimationTiming}"
                                                                                        
                                                        To="{StaticResource WhiteColour}"/>

                                    </Storyboard>

                                </BeginStoryboard>

                            </Trigger.EnterActions>

                            <!-- When mouse leave control -->
                            <Trigger.ExitActions>

                                <BeginStoryboard>

                                    <Storyboard>

                                        <!-- Animate back to original colour -->
                                        <ColorAnimation Storyboard.TargetProperty="(Button.Foreground).(SolidColorBrush.Color)"
                                                                                        
                                                        Duration="{StaticResource MouseHoverAnimationTiming}"
                                                                                        
                                                        To="Black"/>

                                    </Storyboard>

                                </BeginStoryboard>

                            </Trigger.ExitActions>

                        </Trigger>


                        <!-- Because visibility ironically doesn't work well with fade-in/out I use IsEnabled -->
                        <Trigger Property="IsEnabled" Value="False">

                            <Trigger.EnterActions>

                                <BeginStoryboard>

                                    <Storyboard>

                                        <!-- Fade out when control is disabled -->
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" 
                                                                                 
                                                                                 To="0" 
                                                                                 
                                                                                 Duration="{StaticResource MouseHoverAnimationTiming}"
                                                                                 />

                                    </Storyboard>

                                </BeginStoryboard>

                            </Trigger.EnterActions>


                            <Trigger.ExitActions>

                                <BeginStoryboard>

                                    <Storyboard>

                                        <!-- Fade in when control is enabled -->
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" 
                                                                                 
                                                                                 To="1" 
                                                                                 
                                                                                 Duration="{StaticResource MouseHoverAnimationTiming}"
                                                                                 />

                                    </Storyboard>

                                </BeginStoryboard>

                            </Trigger.ExitActions>

                        </Trigger>


                    </ControlTemplate.Triggers>

                </ControlTemplate>

            </Setter.Value>

        </Setter>

    </Style>


    <Style x:Key="DarkGreyThreeDotVerticalButtonStyle" TargetType="{x:Type Button}">

        <Setter Property="Foreground" Value="{StaticResource GreyBrush}"/>

        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>

        <Setter Property="Cursor" Value="Hand"/>

        <Setter Property="SnapsToDevicePixels" Value="True"/>

        <Setter Property="Opacity" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsEnabled}"/>


        <Setter Property="Template">

            <Setter.Value>

                <ControlTemplate>

                    <!-- The control's main border -->
                    <Border Background="Transparent"
                            >

                        <!-- A stack panel, jus for ease of layout so the dots will be aligned without too much hassle-->
                        <StackPanel HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}">

                            <!-- The 3 dots, and 1 "main" dot that all other dots "inherit" from -->
                            <Ellipse x:Name="MainEllipse"
                                                                 
                                      Width="4"
                                      Height="{Binding Path=ActualWidth, 
                                      RelativeSource={RelativeSource Mode=Self}}"
                                      
                                      Fill="{TemplateBinding Foreground}"/>

                            <Ellipse Width="{Binding ElementName=MainEllipse, Path=ActualWidth}"
                                     Height="{Binding ElementName=MainEllipse, Path=ActualHeight}"
                                                                     
                                     Margin="0,1"
                                                                  
                                     Fill="{TemplateBinding Foreground}"/>

                            <Ellipse Width="{Binding ElementName=MainEllipse, Path=ActualWidth}"
                                     Height="{Binding ElementName=MainEllipse, Path=ActualHeight}"
                                                                      
                                     Fill="{TemplateBinding Foreground}"/>

                        </StackPanel>

                    </Border>

                    <ControlTemplate.Triggers>

                        <!-- When mouse enters the control -->
                        <Trigger Property="IsMouseOver" Value="True">

                            <Trigger.EnterActions>

                                <BeginStoryboard>

                                    <Storyboard>

                                        <!-- Animate to a white colour -->
                                        <ColorAnimation Storyboard.TargetProperty="(Button.Foreground).(SolidColorBrush.Color)"
                                                                                        
                                                        Duration="{StaticResource MouseHoverAnimationTiming}"
                                                                                        
                                                        To="{StaticResource WhiteColour}"/>

                                    </Storyboard>

                                </BeginStoryboard>

                            </Trigger.EnterActions>

                            <!-- When mouse leave control -->
                            <Trigger.ExitActions>

                                <BeginStoryboard>

                                    <Storyboard>

                                        <!-- Animate back to original colour -->
                                        <ColorAnimation Storyboard.TargetProperty="(Button.Foreground).(SolidColorBrush.Color)"
                                                                                        
                                                        Duration="{StaticResource MouseHoverAnimationTiming}"
                                                                                        
                                                        To="{StaticResource GreyColour}"/>

                                    </Storyboard>

                                </BeginStoryboard>

                            </Trigger.ExitActions>

                        </Trigger>


                        <!-- Because visibility ironically doesn't work well with fade-in/out I use IsEnabled -->
                        <Trigger Property="IsEnabled" Value="False">

                            <Trigger.EnterActions>

                                <BeginStoryboard>

                                    <Storyboard>

                                        <!-- Fade out when control is disabled -->
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" 
                                                                                 
                                                                                 To="0" 
                                                                                 
                                                                                 Duration="{StaticResource MouseHoverAnimationTiming}"
                                                                                 />

                                    </Storyboard>

                                </BeginStoryboard>

                            </Trigger.EnterActions>


                            <Trigger.ExitActions>

                                <BeginStoryboard>

                                    <Storyboard>

                                        <!-- Fade in when control is enabled -->
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" 
                                                                                 
                                                                                 To="1" 
                                                                                 
                                                                                 Duration="{StaticResource MouseHoverAnimationTiming}"
                                                                                 />

                                    </Storyboard>

                                </BeginStoryboard>

                            </Trigger.ExitActions>

                        </Trigger>


                    </ControlTemplate.Triggers>

                </ControlTemplate>

            </Setter.Value>

        </Setter>

    </Style>



    <!-- A button style used in the title bars -->
    <Style x:Key="ProjectListTitleButtonStyle" TargetType="{x:Type Button}">

        <Setter Property="Padding" Value="10,5"/>

        <Setter Property="Cursor" Value="Hand"/>

        <Setter Property="Foreground" Value="{StaticResource BlackBrush}"/>
        
        <Setter Property="SnapsToDevicePixels" Value="True"/>

        <Setter Property="Template">

            <Setter.Value>

                <ControlTemplate TargetType="{x:Type Button}">

                    <!-- The control's main border -->
                    <Border BorderBrush="{TemplateBinding Foreground}"
                            BorderThickness="1"

                            UseLayoutRounding="True"
                            
                            CornerRadius="2"
                            
                            Background="Transparent"
                            
                            Padding="{TemplateBinding Padding}">

                        <!-- The control's main content presenter -->
                        <ContentPresenter Content="{TemplateBinding Content}"
                                            
                                          VerticalAlignment="Center"/>

                    </Border>

                    <ControlTemplate.Triggers>

                        <!-- When mouse is inside the control -->
                        <Trigger Property="IsMouseOver" Value="True">

                            <Trigger.EnterActions>

                                <BeginStoryboard>

                                    <Storyboard>

                                        <!-- Change foreground colour to white -->
                                        <ColorAnimation Storyboard.TargetProperty="(Button.Foreground).(SolidColorBrush.Color)"
                                                                            
                                                                            Duration="0:0:1"
                                                                            
                                                                            To="{StaticResource WhiteColour}"/>

                                    </Storyboard>

                                </BeginStoryboard>

                            </Trigger.EnterActions>


                            <Trigger.ExitActions>

                                <BeginStoryboard>

                                    <Storyboard>

                                        <!-- Change foreground colour back to black -->
                                        <ColorAnimation Storyboard.TargetProperty="(Button.Foreground).(SolidColorBrush.Color)"
                                                                            
                                                                            Duration="0:0:1"
                                                                            
                                                                            To="{StaticResource BlackColour}"/>

                                    </Storyboard>

                                </BeginStoryboard>

                            </Trigger.ExitActions>

                        </Trigger>

                    </ControlTemplate.Triggers>

                </ControlTemplate>

            </Setter.Value>

        </Setter>

    </Style>


    <!-- A default button for the app -->
    <Style x:Key="DefaultAppButtonGrey" TargetType="{x:Type Button}">

        <Setter Property="FontFamily" Value="{StaticResource LatoRegular}"/>

        <Setter Property="Cursor" Value="Hand"/>

        <Setter Property="Foreground" Value="{StaticResource BlackBrush}"/>
        <Setter Property="Background" Value="{StaticResource LightGreyBrush}"/>

        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>


        <Setter Property="Template">

            <Setter.Value>

                <ControlTemplate TargetType="{x:Type Button}">

                    <!-- The main border about the control -->
                    <Border x:Name="MainBorder" 
                                        
                            Background="{StaticResource LightGreyBrush}"
                            CornerRadius="4"
                            
                            Padding="10,5">

                        <!-- A content presenter -->
                        <ContentPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>

                    </Border>

                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver" Value="True">


                            <!-- When mouse enters the control -->
                            <Trigger.EnterActions>

                                <BeginStoryboard>

                                    <Storyboard>

                                        <!-- Animate the background to a grey colour -->
                                        <ColorAnimation Duration="{StaticResource MouseHoverAnimationTiming}"
                                                                    
                                                                    Storyboard.TargetName="MainBorder"
                                                                    Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                                    
                                                                    To="{StaticResource GreyColour}"/>


                                        <!-- Animate the foreground(text) to a white colour -->
                                        <ColorAnimation Duration="{StaticResource MouseHoverAnimationTiming}"
                                                                    
                                                                    Storyboard.TargetProperty="(Foreground).(SolidColorBrush.Color)"
                                                                    
                                                                    To="{StaticResource WhiteColour}"/>

                                    </Storyboard>

                                </BeginStoryboard>

                            </Trigger.EnterActions>


                            <!-- When mouse exists the control -->
                            <Trigger.ExitActions>

                                <BeginStoryboard>

                                    <Storyboard>

                                        <!-- Animate the background to a light grey colour -->
                                        <ColorAnimation Duration="{StaticResource MouseHoverAnimationTiming}"
                                                                    
                                                                    Storyboard.TargetName="MainBorder"
                                                                    Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                                    
                                                                    To="{StaticResource LightgreyColour}"/>


                                        <!-- Animate the foreground(text) to a black colour -->
                                        <ColorAnimation Duration="{StaticResource MouseHoverAnimationTiming}"
                                                                    
                                                                    Storyboard.TargetProperty="(Foreground).(SolidColorBrush.Color)"
                                                                    
                                                                    To="{StaticResource BlackColour}"/>

                                    </Storyboard>

                                </BeginStoryboard>

                            </Trigger.ExitActions>

                        </Trigger>

                        <!-- When IsEnaled is true-->
                        <Trigger Property="IsEnabled" Value="False">

                            <!-- Set the control's opacity to half -->
                            <Setter Property="Opacity" Value="0.5"/>

                        </Trigger>
                        
                    </ControlTemplate.Triggers>

                </ControlTemplate>

            </Setter.Value>

        </Setter>

    </Style>

    
    <Style x:Key="AppButtonDarkGrey" TargetType="{x:Type Button}">

        <Setter Property="FontFamily" Value="{StaticResource LatoRegular}"/>

        <Setter Property="Cursor" Value="Hand"/>

        <Setter Property="Foreground" Value="{StaticResource WhiteBrush}"/>
        <Setter Property="Background" Value="{StaticResource GreyBrush}"/>

        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>


        <Setter Property="Template">

            <Setter.Value>

                <ControlTemplate TargetType="{x:Type Button}">

                    <!-- The main border about the control -->
                    <Border x:Name="MainBorder" 
                                        
                            Background="{TemplateBinding Background}"
                            CornerRadius="4"
                            
                            Padding="10,5">

                        <!-- A content presenter -->
                        <ContentPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>

                    </Border>

                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver" Value="True">


                            <!-- When mouse enters the control -->
                            <Trigger.EnterActions>

                                <BeginStoryboard>

                                    <Storyboard>

                                        <!-- Animate the background to a grey colour -->
                                        <ColorAnimation Duration="{StaticResource MouseHoverAnimationTiming}"
                                                                    
                                                                    Storyboard.TargetName="MainBorder"
                                                                    Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                                    
                                                                    To="{StaticResource WhiteColour}"/>


                                        <!-- Animate the foreground(text) to a white colour -->
                                        <ColorAnimation Duration="{StaticResource MouseHoverAnimationTiming}"
                                                                    
                                                                    Storyboard.TargetProperty="(Foreground).(SolidColorBrush.Color)"
                                                                    
                                                                    To="{StaticResource BlackColour}"/>

                                    </Storyboard>

                                </BeginStoryboard>

                            </Trigger.EnterActions>


                            <!-- When mouse exists the control -->
                            <Trigger.ExitActions>

                                <BeginStoryboard>

                                    <Storyboard>

                                        <!-- Animate the background to a light grey colour -->
                                        <ColorAnimation Duration="{StaticResource MouseHoverAnimationTiming}"
                                                                    
                                                                    Storyboard.TargetName="MainBorder"
                                                                    Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                                    
                                                                    To="{StaticResource GreyColour}"/>


                                        <!-- Animate the foreground(text) to a black colour -->
                                        <ColorAnimation Duration="{StaticResource MouseHoverAnimationTiming}"
                                                                    
                                                                    Storyboard.TargetProperty="(Foreground).(SolidColorBrush.Color)"
                                                                    
                                                                    To="{StaticResource WhiteColour}"/>

                                    </Storyboard>

                                </BeginStoryboard>

                            </Trigger.ExitActions>

                        </Trigger>

                        <!-- When IsEnaled is true-->
                        <Trigger Property="IsEnabled" Value="False">

                            <!-- Set the control's opacity to half -->
                            <Setter Property="Opacity" Value="0.5"/>

                        </Trigger>

                    </ControlTemplate.Triggers>

                </ControlTemplate>

            </Setter.Value>

        </Setter>

    </Style>



</ResourceDictionary>