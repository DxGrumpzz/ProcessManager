<UserControl x:Class="ProcessManager.UI.ProcessItemView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:ProcessManager.UI"
             mc:Ignorable="d" 
             
             d:DesignWidth="400"
             
             d:DataContext="{x:Static local:ProcessItemViewModel.DesignInstance}">


    <Border Background="Transparent"
            x:Name="MainBorder"
            
            AllowDrop="True"
            
            local:DragAndDrop.DragEnterCommand="{Binding DragEnterCommand}"
            local:DragAndDrop.DragLeaveCommand="{Binding DragLeaveCommand}"
            
            local:MouseEnterAttachedProperty.Command="{Binding MouseEnterCommand}"
            local:MouseLeaveAttachedProperty.Command="{Binding MouseLeaveCommand}"
            
            local:DragAndDrop.DropCommand="{Binding DropCommand}">


        <Border.Style>

            <Style TargetType="{x:Type Border}">

                <Style.Triggers>

                    <DataTrigger Binding="{Binding IsSelected}" Value="True">

                        <DataTrigger.EnterActions>

                            <BeginStoryboard>

                                <Storyboard>

                                    <ColorAnimation Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                    
                                                    Duration="{StaticResource MouseHoverAnimationTiming}"
                                                    
                                                    To="{StaticResource LightgreyColour}"/>

                                </Storyboard>

                            </BeginStoryboard>

                        </DataTrigger.EnterActions>


                        <DataTrigger.ExitActions>

                            <BeginStoryboard>

                                <Storyboard>

                                    <ColorAnimation Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                    
                                                    Duration="{StaticResource MouseHoverAnimationTiming}"
                                                    
                                                    To="{StaticResource WhiteColour}"/>

                                </Storyboard>

                            </BeginStoryboard>

                        </DataTrigger.ExitActions>

                    </DataTrigger>

                </Style.Triggers>

            </Style>

        </Border.Style>

        <Grid Height="35"
              
              Margin="0,0,10,0">


            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="AUTO"/>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="AUTO" SharedSizeGroup="Col1"/>
                <ColumnDefinition Width="AUTO" SharedSizeGroup="Col2"/>
            </Grid.ColumnDefinitions>


            <Button Width="15"
    
                    Cursor="SizeAll"
                    
                    local:MouseMoved.Command="{Binding MouseMovedCommand}"
                    
                    local:DragAndDrop.StartDragDropCommand="{Binding DragAndDropEnabled}"
                    local:DragAndDrop.DragDropData="{Binding DragDropData}"
                    
                    Style="{StaticResource DarkGreyThreeDotVerticalButtonStyle}"/>


            <!-- Process name and label -->
            <Grid TextBlock.FontFamily="{StaticResource LatoThin}"
                  TextBlock.FontWeight="Thin"
             
                  TextBlock.FontSize="17"
            
                  Grid.Column="1"
                  
                  Background="Transparent"
                  
                  local:MouseEnterAttachedProperty.Command="{Binding MouseEnterProcessNameCommand}"
                  local:MouseLeaveAttachedProperty.Command="{Binding MouseLeaveProcessNameCommand}">

                <Grid.InputBindings>

                    <MouseBinding MouseAction="LeftClick"/>

                </Grid.InputBindings>

                <!-- The name of this process -->
                <TextBlock Text="{Binding ProcessName}"

                       Visibility="{Binding ProcessLabelVisible, 
                       Converter={local:BooleanToVisibilityValueConverter},
                       ConverterParameter='True'}"

                       TextTrimming="CharacterEllipsis"
                       VerticalAlignment="Center"/>


                <!-- The process label -->
                <TextBlock Text="{Binding Process.ProcessLabel}"
                       
                       Visibility="{Binding ProcessLabelVisible, 
                       Converter={local:BooleanToVisibilityValueConverter}}"
                       
                       TextTrimming="CharacterEllipsis"
                       VerticalAlignment="Center"/>

            </Grid>

            <!-- Eidt process button -->
            <Button Grid.Column="2" 
                                    
                    IsEnabled="{Binding ElementName=MainBorder, Path=IsMouseOver}"
                                        
                    Margin="0,0,10,0"
                    
                    Command="{Binding EditProcessCommand}"
                    
                    Style="{StaticResource ThreeDotButtonStyle}"/>

            <!-- Run and close buttons container -->
            <StackPanel Orientation="Horizontal"
                        
                        Grid.Column="3" 
                        
                        Margin="0,3"
                        local:UniformMargin.Margin="5,0,0,0">

                <StackPanel.Resources>

                    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource AppButtonDarkGrey}"/>

                </StackPanel.Resources>


                <!-- Process Run buttons -->
                <Button Content="Run"
                    
                        IsEnabled="{Binding ProcessRunning,
                        Converter={local:InvertBooleanValueConverter}}"
                    
                        Command="{Binding RunProcessCommand}"/>


                <!-- Close Process buttons -->
                <Button Content="Close" 
                    
                        IsEnabled="{Binding ProcessRunning}"
                    
                        Command="{Binding CloseProcessCommand}"/>



                <!-- Show a process buttons -->
                <Button Content="Show"
                    
                        Margin="5,0,0,0"
                        Command="{Binding ShowProcessCommand}">

                    <Button.Style>

                        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource AppButtonDarkGrey}">

                            <Style.Triggers>

                                <DataTrigger Binding="{Binding ProcessRunning}" Value="False">

                                    <Setter Property="IsEnabled" Value="False"/>

                                </DataTrigger>


                                <DataTrigger Binding="{Binding ProcessVisible}" Value="True">

                                    <Setter Property="IsEnabled" Value="False"/>

                                </DataTrigger>

                            </Style.Triggers>

                        </Style>

                    </Button.Style>

                </Button>


                <!-- Hide a process buttons -->
                <Button Content="Hide" 
                    
                        Command="{Binding HideProcessCommand}">

                    <Button.Style>

                        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource AppButtonDarkGrey}">

                            <Style.Triggers>

                                <DataTrigger Binding="{Binding ProcessRunning}" Value="False">

                                    <Setter Property="IsEnabled" Value="False"/>

                                </DataTrigger>


                                <DataTrigger Binding="{Binding ProcessVisible, 
                                        Converter={local:InvertBooleanValueConverter}}" 
                                         
                                        Value="True">

                                    <Setter Property="IsEnabled" Value="False"/>

                                </DataTrigger>

                            </Style.Triggers>

                        </Style>

                    </Button.Style>

                </Button>

            </StackPanel>

        </Grid>

    </Border>

</UserControl>