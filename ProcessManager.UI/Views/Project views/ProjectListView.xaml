<UserControl x:Class="ProcessManager.UI.ProjectListView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:ProcessManager.UI"
             mc:Ignorable="d" 
             
             d:DesignHeight="300" 
             d:DesignWidth="400"
             
             d:DataContext="{x:Static local:ProjectsListViewModel.DesignInstance}">


    <Grid Margin="10">

        <Grid.RowDefinitions>
            <RowDefinition Height="AUTO"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>


        <TextBlock Text="Projects: "
                   
                   FontSize="20"/>

        <HeaderedItemsControl Grid.Row="1"
                              
                              Grid.IsSharedSizeScope="True"
                              
                              ItemsSource="{Binding Projects}">

            <HeaderedItemsControl.Template>

                <ControlTemplate TargetType="{x:Type HeaderedItemsControl}">

                    <StackPanel>

                        <ContentPresenter ContentSource="Header" />

                        <ItemsPresenter />

                    </StackPanel>

                </ControlTemplate>

            </HeaderedItemsControl.Template>


            <!-- Header -->
            <HeaderedItemsControl.Header>

                <Grid Margin="0,0,0,5">

                    <Grid.ColumnDefinitions>

                        <ColumnDefinition Width="Auto" SharedSizeGroup="Column0"/>

                        <ColumnDefinition Width="*" />

                        <ColumnDefinition Width="Auto" SharedSizeGroup="Column2"/>

                    </Grid.ColumnDefinitions>


                    <TextBlock Grid.Column="0" 
                           
                               Text="Project name"/>


                    <TextBlock Grid.Column="2" 
                           
                               Text="Project settings"/>

                </Grid>

            </HeaderedItemsControl.Header>


            <HeaderedItemsControl.ItemTemplate>

                <DataTemplate>

                    <Border local:MouseEnterAttachedProperty.Command="{Binding MouseEnterCommand}"
                            local:MouseLeaveAttachedProperty.Command="{Binding MouseLeaveCommand}">

                        <Border.Style>

                            <Style TargetType="{x:Type Border}">

                                <Setter Property="Background" Value="Transparent"/>

                                <Style.Triggers>

                                    <Trigger Property="IsMouseOver" Value="True">

                                        <Trigger.EnterActions>

                                            <BeginStoryboard>

                                                <Storyboard>

                                                    <ColorAnimation Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                                             
                                                                    Duration="{StaticResource MouseHoverAnimationTiming}"
                                                                             
                                                                    To="{StaticResource LightgreyColour}"/>

                                                </Storyboard>

                                            </BeginStoryboard>

                                        </Trigger.EnterActions>

                                        <Trigger.ExitActions>

                                            <BeginStoryboard>

                                                <Storyboard>

                                                    <ColorAnimation Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                                             
                                                                    Duration="{StaticResource MouseHoverAnimationTiming}"
                                                                             
                                                                    To="{StaticResource WhiteColour}"/>

                                                </Storyboard>

                                            </BeginStoryboard>

                                        </Trigger.ExitActions>

                                    </Trigger>

                                </Style.Triggers>

                            </Style>


                        </Border.Style>



                        <Grid>

                            <Grid.ColumnDefinitions>

                                <ColumnDefinition Width="Auto" SharedSizeGroup="Column0"/>

                                <ColumnDefinition Width="*" />

                                <ColumnDefinition Width="Auto" SharedSizeGroup="Column2"/>

                            </Grid.ColumnDefinitions>


                            <TextBlock Grid.Column="0" 
                                   
                                   Text="{Binding Project.ProjectName}"/>


                            <Button Grid.Column="2" 
                                    
                                    Command="{Binding SwitchToProjectViewCommand}">

                                <Button.Style>

                                    <Style TargetType="{x:Type Button}" 
                                           BasedOn="{StaticResource ThreeDotButtonStyle}">

                                        <Setter Property="Opacity" Value="0"/>

                                        <Style.Triggers>

                                            <DataTrigger Binding="{Binding SettingsButtonVisible}" Value="False">

                                                <DataTrigger.EnterActions>

                                                    <BeginStoryboard>

                                                        <Storyboard>

                                                            <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                                             
                                                                             Duration="{StaticResource MouseHoverAnimationTiming}"
                                                                             
                                                                             To="0"/>

                                                        </Storyboard>

                                                    </BeginStoryboard>

                                                </DataTrigger.EnterActions>

                                                <DataTrigger.ExitActions>

                                                    <BeginStoryboard>

                                                        <Storyboard>

                                                            <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                                             
                                                                             Duration="{StaticResource MouseHoverAnimationTiming}"
                                                                             
                                                                             To="1"/>

                                                        </Storyboard>

                                                    </BeginStoryboard>

                                                </DataTrigger.ExitActions>

                                            </DataTrigger>

                                        </Style.Triggers>

                                    </Style>

                                </Button.Style>

                            </Button>

                        </Grid>

                    </Border>

                </DataTemplate>

            </HeaderedItemsControl.ItemTemplate>

        </HeaderedItemsControl>

        <!--Add new project button-->
        <Button Content="Add new project"
                        
                HorizontalAlignment="Left"
                VerticalAlignment="Bottom"        
                Margin="0,5,0,0"
                
                Grid.RowSpan="2"
                
                Command="{Binding AddNewProjectCommnad}"/>

    </Grid>

</UserControl>


<!--#region NewRegion -->

<!--<DataGrid ItemsSource="{Binding Projects}"
                  
                  Margin="0,10,0,0"
                  
                  Grid.Row="1">

            -->
<!-- The datagrid's main style -->
<!--
            <DataGrid.Style>

                <Style TargetType="{x:Type DataGrid}">

                    <Setter Property="HorizontalScrollBarVisibility" Value="Disabled"/>

                    <Setter Property="GridLinesVisibility" Value="None"/>

                    <Setter Property="Background" Value="Transparent"/>

                    <Setter Property="AutoGenerateColumns" Value="False"/>

                    <Setter Property="RowHeaderWidth" Value="0"/>
                    <Setter Property="BorderThickness" Value="0"/>

                    <Setter Property="IsReadOnly" Value="True"/>
                    <Setter Property="SelectionMode" Value="Single"/>

                </Style>

            </DataGrid.Style>


            -->
<!-- A style for the header(s)-->
<!--
            <DataGrid.ColumnHeaderStyle>

                <Style TargetType="{x:Type DataGridColumnHeader}">

                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="Margin" Value="0,0,0,5"/>

                </Style>

            </DataGrid.ColumnHeaderStyle>


            -->
<!-- A style for the inner items in the rows -->
<!--
            <DataGrid.RowStyle>

                <Style TargetType="{x:Type DataGridRow}">

                    <Setter Property="Background" Value="Transparent"/>

                    <Style.Triggers>

                        <Trigger Property="IsSelected" Value="True">

                            <Setter Property="Background" Value="{StaticResource LightGreyBrush}"/>

                        </Trigger>

                        -->
<!-- When mouse is over the row -->
<!--
                        <Trigger Property="IsMouseOver" Value="True">

                            <Trigger.EnterActions>

                                <BeginStoryboard>

                                    <Storyboard>

                                        -->
<!-- Change row to light grey colour-->
<!--
                                        <ColorAnimation Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                    
                                                    Duration="{StaticResource MouseHoverAnimationTiming}"
                                                    
                                                    To="{StaticResource LightgreyColour}"/>

                                    </Storyboard>

                                </BeginStoryboard>

                            </Trigger.EnterActions>

                            <Trigger.ExitActions>
                                <BeginStoryboard>

                                    <Storyboard>

                                        -->
<!-- Change row back to "invisible" -->
<!--
                                        <ColorAnimation Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                    
                                                    Duration="{StaticResource MouseHoverAnimationTiming}"
                                                    
                                                    To="Transparent"/>

                                    </Storyboard>

                                </BeginStoryboard>

                            </Trigger.ExitActions>

                        </Trigger>

                    </Style.Triggers>

                </Style>

            </DataGrid.RowStyle>


            -->
<!-- A style for the items inside the row -->
<!--
            <DataGrid.CellStyle>

                <Style TargetType="{x:Type DataGridCell}">

                    <Setter Property="Margin" Value="0,5"/>

                    <Style.Triggers>

                        -->
<!-- Override default style and set it so it won't break the custom style I set on the rows -->
<!--
                        <Trigger Property="IsSelected" Value="True">

                            <Setter Property="BorderBrush" Value="Transparent"/>
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="Foreground" Value="Black"/>

                        </Trigger>

                    </Style.Triggers>

                </Style>

            </DataGrid.CellStyle>


            -->
<!-- Headers -->
<!--
            <DataGrid.Columns>

                -->
<!-- Project names column -->
<!--
                <DataGridTextColumn Header="Project name" 
                                    
                                    TextBlock.FontFamily="{StaticResource LatoThin}"
                                    TextBlock.FontWeight="Thin"
                                    
                                    Binding="{Binding Project.ProjectName}"
                                    
                                    Width="*"/>

                -->
<!-- Project settings column-->
<!--
                <DataGridTemplateColumn Header="Project settings" 
                                        Width="AUTO">

                    <DataGridTemplateColumn.CellTemplate>

                        <DataTemplate>

                            <Button Command="{Binding SwitchToProjectViewCommand}"
                                    Style="{StaticResource ThreeDotButtonStyle}">

                            </Button>

                        </DataTemplate>

                    </DataGridTemplateColumn.CellTemplate>

                </DataGridTemplateColumn>

            </DataGrid.Columns>

        </DataGrid>-->

<!--#endregion-->