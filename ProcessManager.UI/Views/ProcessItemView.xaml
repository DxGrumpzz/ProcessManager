<UserControl x:Class="ProcessManager.UI.ProcessItemView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:ProcessManager.UI"
             mc:Ignorable="d" 
             
             d:DesignHeight="25" 
             d:DesignWidth="300"
             
             d:DataContext="{x:Static local:ProcessItemViewModel.DesignInstance}">


    <Grid>

        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition Width="AUTO"/>
        </Grid.ColumnDefinitions>


        <Grid local:MouseEnterAttachedProperty.Command="{Binding MouseEnterCommand}" 
              local:MouseLeaveAttachedProperty.Command="{Binding MouseLeaveCommand}">

            <!-- The name of this process -->
            <TextBlock Text="{Binding ProcessPath}"
                       
                       Visibility="{Binding ProcessLabelVisible,
                       Converter={local:BooleanToVisibilityValueConverter}, 
                       ConverterParameter='True'}"
                       
                       TextTrimming="CharacterEllipsis"
                       VerticalAlignment="Center"/>


            <!-- The process label -->
            <TextBlock Text="{Binding Process.ProcessLabel}"
                       
                       Visibility="{Binding ProcessLabelVisible,
                       Converter={local:BooleanToVisibilityValueConverter}}"
                       
                       TextTrimming="CharacterEllipsis"
                       VerticalAlignment="Center"/>

        </Grid>


        <!-- Run and close buttons container -->
        <StackPanel Orientation="Horizontal"
                    
                    local:UniformMargin.Margin="5,0,0,0"
                    
                    Grid.Column="1">


            <!-- Process Run buttons -->
            <Button Content="Run"
                    
                    IsEnabled="{Binding ProcessRunning,
                    Converter={local:InvertBooleanValueConverter}}"
                    
                    Command="{Binding RunProcessCommand}"/>


            <!-- Close Process buttons -->
            <Button Content="Close" 
                    
                    IsEnabled="{Binding ProcessRunning}"
                    
                    Command="{Binding CloseProcessCommand}"/>



            <!-- Show a process buttons -->
            <Button Content="Show"
                    
                    Margin="10,0,0,0"
                    
                    Command="{Binding ShowProcessCommand}">

                <Button.Style>

                    <Style TargetType="{x:Type Button}">

                        <Style.Triggers>

                            <DataTrigger Binding="{Binding ProcessRunning}" Value="False">

                                <Setter Property="IsEnabled" Value="False"/>

                            </DataTrigger>


                            <DataTrigger Binding="{Binding ProcessVisible}" Value="True">

                                <Setter Property="IsEnabled" Value="False"/>

                            </DataTrigger>

                        </Style.Triggers>

                    </Style>

                </Button.Style>

            </Button>


            <!-- Hide a process buttons -->
            <Button Content="Hide" 
                    
                    Command="{Binding HideProcessCommand}">

                <Button.Style>

                    <Style TargetType="{x:Type Button}">

                        <Style.Triggers>

                            <DataTrigger Binding="{Binding ProcessRunning}" Value="False">

                                <Setter Property="IsEnabled" Value="False"/>

                            </DataTrigger>


                            <DataTrigger Binding="{Binding ProcessVisible, 
                                         Converter={local:InvertBooleanValueConverter}}" 
                                         
                                         Value="True">

                                <Setter Property="IsEnabled" Value="False"/>

                            </DataTrigger>

                        </Style.Triggers>

                    </Style>

                </Button.Style>

            </Button>

        </StackPanel>

    </Grid>

</UserControl>